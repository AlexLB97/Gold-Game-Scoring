{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/Documents/Programming/Programming Projects/gold-game-scoring/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ValueButtons from './components/ValueButtons';\nimport ScoreDisplay from './components/ScoreDisplay';\nimport SelectLevel from './components/SelectLevel';\nimport LevelRules from './components/LevelRules';\nimport SetGoal from './components/SetGoal';\nimport Popup from './components/Popup';\nimport { Z_FIXED } from 'zlib';\n\nfunction App() {\n  //Initial states and globals. Later will incorporate a button in UI for changing level\n  const [completed, setCompleted] = useState(false);\n  const [goal, setGoal] = useState(0);\n  const [rules, setRules] = useState([{\n    neutral: 0,\n    addOne: 0,\n    subOne: 0\n  }]);\n  const [level, setLevel] = useState('');\n  const [appState, setAppState] = useState([{\n    displayText: [],\n    endValues: [],\n    endScore: 0,\n    totalScore: 0\n  }]);\n  let newState = [];\n  const xArray = [];\n  const mArray = []; //Functions related to scoring\n  //--------------------------------------------------------------------------------------\n\n  useEffect(() => {\n    const storedGoal = localStorage.getItem('goal');\n    const storedState = JSON.parse(localStorage.getItem('appState'));\n    const storedLevel = localStorage.getItem('level');\n    const storedCompleted = JSON.parse(localStorage.getItem('completed'));\n    const newCompleted = storedCompleted ? storedCompleted : completed;\n    setCompleted(newCompleted);\n    const newLevel = storedLevel ? storedLevel : 'Advanced';\n    setLevel(newLevel);\n    const newState = storedState ? storedState : appState;\n    setAppState(newState);\n    const newGoal = storedGoal ? storedGoal : 0;\n    setGoal(Number(newGoal));\n  }, []);\n  useEffect(() => {\n    let options = document.getElementsByName('level');\n\n    for (var i = 0; i < options.length; i++) {\n      if (options[i].value === level) {\n        options[i].checked = \"checked\";\n      } else {\n        continue;\n      }\n\n      newRules(level);\n    }\n  }, [level]);\n  useEffect(() => {\n    const clearButton = document.getElementById('CLEAR');\n    const nextButton = document.getElementById('NEXT');\n    const changeButton = document.getElementById('changeLevel');\n    const lastButton = document.getElementById('last');\n    const resetButton = document.getElementById('reset');\n\n    if (appState[appState.length - 1].endValues.length === 0) {\n      clearButton.disabled = true;\n    } else {\n      clearButton.disabled = false;\n    }\n\n    if (appState[appState.length - 1].endValues.length === 6) {\n      nextButton.disabled = false;\n    } else {\n      nextButton.disabled = true;\n    }\n\n    if (appState[appState.length - 1].endValues.length === 0) {\n      changeButton.disabled = false;\n    } else {\n      changeButton.disabled = true;\n    }\n\n    if (appState.length > 1) {\n      lastButton.disabled = false;\n    } else {\n      lastButton.disabled = true;\n    }\n\n    if (appState.length === 1 && appState[0].endValues.length === 0 && localStorage.length === 0) {\n      resetButton.disabled = true;\n    } else {\n      resetButton.disabled = false;\n    }\n\n    if (appState[appState.length - 1].totalScore === goal && goal !== 0 && completed === false) {\n      const popup = document.getElementById('popup');\n      popup.style.display = 'fixed';\n      setCompleted(true);\n      localStorage.setItem('completed', true);\n    } else {\n      return;\n    }\n  }, [appState, goal, completed]);\n  useEffect(() => {\n    const goalButton = document.getElementsByClassName('goal-button');\n\n    if (goal !== 0) {\n      goalButton[0].disabled = true;\n    } else {\n      goalButton[0].disabled = false;\n    }\n  }, [goal]); //Keeps the score list scrolled to the current end\n\n  function updateScroll() {\n    const element = document.getElementById('score-display');\n    element.scrollTop = element.scrollHeight;\n  }\n\n  function sortDisplayText() {\n    for (var i = 0; i < appState[appState.length - 1].displayText.length; i++) {\n      if (appState[appState.length - 1].displayText[i] === 'X') {\n        appState[appState.length - 1].displayText.splice(i, 1);\n        xArray.push('X');\n        i--;\n      } else if (appState[appState.length - 1].displayText[i] === 'M') {\n        appState[appState.length - 1].displayText.splice(i, 1);\n        i--;\n        mArray.push('M');\n      } else {\n        continue;\n      }\n    }\n\n    appState[appState.length - 1].displayText.sort((a, b) => parseInt(b) - parseInt(a));\n    appState[appState.length - 1].displayText = xArray.concat(appState[appState.length - 1].displayText, mArray);\n  } //Decrements both total score and end score\n\n\n  function decrementScore() {\n    newState[newState.length - 1].endScore--;\n    newState[newState.length - 1].totalScore--;\n  } //Increments total score and end score\n\n\n  function incrementScore() {\n    newState[newState.length - 1].endScore++;\n    newState[newState.length - 1].totalScore++;\n  } //Function to change increment and decrement end score and total score based on either a value input or a value deleted. \n\n\n  function handleScoreChange(level, value, opt1, opt2) {\n    switch (level) {\n      case 'Beginner':\n        if (value > 6) {\n          opt1();\n        } else if (value === 6) {\n          break;\n        } else if (value < 6) {\n          opt2();\n        }\n\n        break;\n\n      case 'Intermediate':\n        if (value > 7) {\n          opt1();\n        } else if (value === 7) {\n          break;\n        } else if (value < 7) {\n          opt2();\n        }\n\n        break;\n\n      case 'Advanced':\n        if (value > 8) {\n          opt1();\n        } else if (value === 8) {\n          break;\n        } else if (value < 8) {\n          opt2();\n        }\n\n        break;\n\n      case 'Elite':\n        if (value > 9) {\n          opt1();\n        } else if (value === 9) {\n          break;\n        } else if (value < 9) {\n          opt2();\n        }\n\n        break;\n\n      default:\n        return;\n    }\n  } //Function for handling all inputs from ValueButton buttons\n\n\n  const handleButton = e => {\n    //Code that runs when next end button is pressed\n    if (e.value === \"NEXT END\") {\n      //sort previous end to be displayed in descending order\n      sortDisplayText();\n      newState = [...appState];\n      const lastTotal = newState[newState.length - 1].totalScore;\n      const nextEnd = {\n        displayText: [],\n        endValues: [],\n        endScore: 0,\n        totalScore: lastTotal\n      };\n      newState.push(nextEnd);\n      setAppState(newState);\n      localStorage.setItem('appState', JSON.stringify(newState)); //Code that runs when an arrow value is pressed\n    } else if (!isNaN(e.value)) {\n      newState = [...appState];\n      updateScroll();\n\n      if (newState[newState.length - 1].endValues.length < 6) {\n        newState[newState.length - 1].endValues.push(parseInt(e.value, 10));\n        newState[newState.length - 1].displayText.push(e.innerHTML);\n        handleScoreChange(level, e.value, incrementScore, decrementScore);\n        setAppState(newState);\n        localStorage.setItem('appState', JSON.stringify(newState));\n      } else {\n        return;\n      } //Code that runs when clear is pressed\n\n    } else if (e.value === 'CLEAR') {\n      newState = [...appState];\n      const deletedValue = newState[newState.length - 1].endValues.pop();\n      newState[newState.length - 1].displayText.pop();\n      handleScoreChange(level, deletedValue, decrementScore, incrementScore);\n      setAppState(newState);\n      localStorage.setItem('appState', JSON.stringify(newState));\n    }\n  }; //Functions for the control panel\n  //----------------------------------------------------------------------------------------\n  //Updates the control panel rules section\n\n\n  const newRules = level => {\n    const newRules = [...rules];\n\n    if (level === 'Beginner') {\n      newRules[0].neutral = 6;\n    } else if (level === 'Intermediate') {\n      newRules[0].neutral = 7;\n    } else if (level === 'Advanced') {\n      newRules[0].neutral = 8;\n    } else if (level === 'Elite') {\n      newRules[0].neutral = 9;\n    }\n\n    newRules[0].addOne = newRules[0].neutral + 1;\n    newRules[0].subOne = newRules[0].neutral - 1;\n    setRules(newRules);\n  }; //Updates the level when a new one is selected\n\n\n  const handleLevel = e => {\n    let newLevel = '';\n    e.preventDefault();\n\n    if (appState[appState.length - 1].endValues.length === 0) {\n      let options = document.getElementsByName('level');\n\n      for (var i = 0; i < options.length; i++) {\n        if (options[i].checked) {\n          newLevel = options[i].value;\n          setLevel(newLevel);\n          localStorage.setItem('level', newLevel);\n          break;\n        } else {\n          continue;\n        }\n      }\n    } else {\n      return;\n    }\n  }; //Deletes current end and allows modifications to previous end\n\n\n  const lastEnd = () => {\n    if (appState.length > 1) {\n      newState = [...appState];\n      newState.pop();\n      setAppState(newState);\n    } else {\n      return;\n    }\n  }; //Resets appState\n\n\n  const resetState = () => {\n    setAppState([{\n      displayText: [],\n      endValues: [],\n      endScore: 0,\n      totalScore: 0\n    }]);\n    setCompleted(false);\n    setGoal(0);\n    document.getElementById('goal-input').value = '';\n    localStorage.clear();\n  };\n\n  const handleGoal = () => {\n    const goalInput = document.getElementById('goal-input').value;\n    localStorage.setItem('goal', goalInput);\n    setGoal(Number(goalInput));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    appState: appState,\n    goal: goal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scorecard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScoreDisplay, {\n    appState: appState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ValueButtons, {\n    handleButton: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"control-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, \"Control Panel\"), /*#__PURE__*/React.createElement(SetGoal, {\n    handleGoal: handleGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LevelRules, {\n    level: level,\n    rules: rules,\n    goal: goal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SelectLevel, {\n    handleLevel: handleLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"level-submit blue\",\n    id: \"last\",\n    onClick: lastEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, \"Last End\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"level-submit blue mb-5\",\n    id: \"reset\",\n    onClick: resetState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, \"Reset\")))));\n}\n\nexport default App;\n/*\nThings to add:\n\n-grey out buttons when they are not a valid action\n\n\n*/","map":{"version":3,"sources":["/Users/Alex/Documents/Programming/Programming Projects/gold-game-scoring/src/App.js"],"names":["React","useState","useEffect","ValueButtons","ScoreDisplay","SelectLevel","LevelRules","SetGoal","Popup","Z_FIXED","App","completed","setCompleted","goal","setGoal","rules","setRules","neutral","addOne","subOne","level","setLevel","appState","setAppState","displayText","endValues","endScore","totalScore","newState","xArray","mArray","storedGoal","localStorage","getItem","storedState","JSON","parse","storedLevel","storedCompleted","newCompleted","newLevel","newGoal","Number","options","document","getElementsByName","i","length","value","checked","newRules","clearButton","getElementById","nextButton","changeButton","lastButton","resetButton","disabled","popup","style","display","setItem","goalButton","getElementsByClassName","updateScroll","element","scrollTop","scrollHeight","sortDisplayText","splice","push","sort","a","b","parseInt","concat","decrementScore","incrementScore","handleScoreChange","opt1","opt2","handleButton","e","lastTotal","nextEnd","stringify","isNaN","innerHTML","deletedValue","pop","handleLevel","preventDefault","lastEnd","resetState","clear","handleGoal","goalInput"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;;AAIA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAK,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAC/B,CACE;AACEgB,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,MAAM,EAAE,CAFV;AAGEC,IAAAA,MAAM,EAAE;AAHV,GADF,CAD+B,CAAjC;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CACtC,CACE;AACEuB,IAAAA,WAAW,EAAE,EADf;AAEEC,IAAAA,SAAS,EAAE,EAFb;AAGEC,IAAAA,QAAQ,EAAE,CAHZ;AAIEC,IAAAA,UAAU,EAAE;AAJd,GADF,CADsC,CAAxC;AASE,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf,CAzBW,CA2Bb;AACA;;AAGF5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAApB;AACA,UAAMI,WAAW,GAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMK,eAAe,GAAGH,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAxB;AAEA,UAAMM,YAAY,GAAGD,eAAe,GAAGA,eAAH,GAAqB3B,SAAzD;AACAC,IAAAA,YAAY,CAAC2B,YAAD,CAAZ;AAEA,UAAMC,QAAQ,GAAGH,WAAW,GAAGA,WAAH,GAAiB,UAA7C;AACAhB,IAAAA,QAAQ,CAACmB,QAAD,CAAR;AAEA,UAAMZ,QAAQ,GAAGM,WAAW,GAAGA,WAAH,GAAiBZ,QAA7C;AACAC,IAAAA,WAAW,CAACK,QAAD,CAAX;AAEA,UAAMa,OAAO,GAAGV,UAAU,GAAGA,UAAH,GAAgB,CAA1C;AACAjB,IAAAA,OAAO,CAAC4B,MAAM,CAACD,OAAD,CAAP,CAAP;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAoBAvC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyC,OAAO,GAAGC,QAAQ,CAACC,iBAAT,CAA2B,OAA3B,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,OAAO,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAGH,OAAO,CAACG,CAAD,CAAP,CAAWE,KAAX,KAAqB5B,KAAxB,EAA+B;AAC3BuB,QAAAA,OAAO,CAACG,CAAD,CAAP,CAAWG,OAAX,GAAqB,SAArB;AACH,OAFD,MAEO;AACL;AACD;;AACHC,MAAAA,QAAQ,CAAC9B,KAAD,CAAR;AAEC;AACF,GAXQ,EAWN,CAACA,KAAD,CAXM,CAAT;AAaAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiD,WAAW,GAAGP,QAAQ,CAACQ,cAAT,CAAwB,OAAxB,CAApB;AACA,UAAMC,UAAU,GAAGT,QAAQ,CAACQ,cAAT,CAAwB,MAAxB,CAAnB;AACA,UAAME,YAAY,GAAGV,QAAQ,CAACQ,cAAT,CAAwB,aAAxB,CAArB;AACA,UAAMG,UAAU,GAAGX,QAAQ,CAACQ,cAAT,CAAwB,MAAxB,CAAnB;AACA,UAAMI,WAAW,GAAGZ,QAAQ,CAACQ,cAAT,CAAwB,OAAxB,CAApB;;AACA,QAAI9B,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsCsB,MAAtC,KAAiD,CAArD,EAAwD;AACtDI,MAAAA,WAAW,CAACM,QAAZ,GAAuB,IAAvB;AACD,KAFD,MAEO;AACLN,MAAAA,WAAW,CAACM,QAAZ,GAAuB,KAAvB;AACD;;AACD,QAAInC,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsCsB,MAAtC,KAAiD,CAArD,EAAwD;AACtDM,MAAAA,UAAU,CAACI,QAAX,GAAsB,KAAtB;AACD,KAFD,MAEO;AACLJ,MAAAA,UAAU,CAACI,QAAX,GAAsB,IAAtB;AACD;;AACD,QAAInC,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsCsB,MAAtC,KAAiD,CAArD,EAAwD;AACtDO,MAAAA,YAAY,CAACG,QAAb,GAAwB,KAAxB;AACD,KAFD,MAEO;AACLH,MAAAA,YAAY,CAACG,QAAb,GAAwB,IAAxB;AACD;;AACD,QAAInC,QAAQ,CAACyB,MAAT,GAAkB,CAAtB,EAAyB;AACvBQ,MAAAA,UAAU,CAACE,QAAX,GAAsB,KAAtB;AACD,KAFD,MAEO;AACLF,MAAAA,UAAU,CAACE,QAAX,GAAsB,IAAtB;AACD;;AACD,QAAInC,QAAQ,CAACyB,MAAT,KAAoB,CAApB,IAAyBzB,QAAQ,CAAC,CAAD,CAAR,CAAYG,SAAZ,CAAsBsB,MAAtB,KAAiC,CAA1D,IAA+Df,YAAY,CAACe,MAAb,KAAwB,CAA3F,EAA8F;AAC5FS,MAAAA,WAAW,CAACC,QAAZ,GAAuB,IAAvB;AACD,KAFD,MAEO;AACLD,MAAAA,WAAW,CAACC,QAAZ,GAAuB,KAAvB;AACD;;AACD,QAAInC,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BpB,UAA5B,KAA2Cd,IAA3C,IAAmDA,IAAI,KAAK,CAA5D,IAAiEF,SAAS,KAAK,KAAnF,EAA0F;AACxF,YAAM+C,KAAK,GAAGd,QAAQ,CAACQ,cAAT,CAAwB,OAAxB,CAAd;AACAM,MAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;AACAhD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAoB,MAAAA,YAAY,CAAC6B,OAAb,CAAqB,WAArB,EAAkC,IAAlC;AACD,KALD,MAKO;AACL;AACD;AACF,GAvCQ,EAuCN,CAACvC,QAAD,EAAWT,IAAX,EAAiBF,SAAjB,CAvCM,CAAT;AAyCAT,EAAAA,SAAS,CAAE,MAAM;AACf,UAAM4D,UAAU,GAAGlB,QAAQ,CAACmB,sBAAT,CAAgC,aAAhC,CAAnB;;AACA,QAAIlD,IAAI,KAAK,CAAb,EAAgB;AACdiD,MAAAA,UAAU,CAAC,CAAD,CAAV,CAAcL,QAAd,GAAyB,IAAzB;AACD,KAFD,MAEO;AACLK,MAAAA,UAAU,CAAC,CAAD,CAAV,CAAcL,QAAd,GAAyB,KAAzB;AACD;AACF,GAPQ,EAON,CAAC5C,IAAD,CAPM,CAAT,CAzGe,CAqHb;;AACA,WAASmD,YAAT,GAAyB;AACvB,UAAMC,OAAO,GAAGrB,QAAQ,CAACQ,cAAT,CAAwB,eAAxB,CAAhB;AACAa,IAAAA,OAAO,CAACC,SAAR,GAAqBD,OAAO,CAACE,YAA7B;AACD;;AAED,WAASC,eAAT,GAA2B;AACzB,SAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAExB,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwCuB,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AACtE,UAAIxB,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwCsB,CAAxC,MAA+C,GAAnD,EAAwD;AACtDxB,QAAAA,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwC6C,MAAxC,CAA+CvB,CAA/C,EAAiD,CAAjD;AACAjB,QAAAA,MAAM,CAACyC,IAAP,CAAY,GAAZ;AACAxB,QAAAA,CAAC;AACF,OAJD,MAIO,IAAIxB,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwCsB,CAAxC,MAA+C,GAAnD,EAAwD;AAC7DxB,QAAAA,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwC6C,MAAxC,CAA+CvB,CAA/C,EAAiD,CAAjD;AACAA,QAAAA,CAAC;AACDhB,QAAAA,MAAM,CAACwC,IAAP,CAAY,GAAZ;AACD,OAJM,MAIA;AACL;AACD;AACF;;AACDhD,IAAAA,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwC+C,IAAxC,CAA6C,CAACC,CAAD,EAAGC,CAAH,KAASC,QAAQ,CAACD,CAAD,CAAR,GAAYC,QAAQ,CAACF,CAAD,CAA1E;AACAlD,IAAAA,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,GAA0CK,MAAM,CAAC8C,MAAP,CAAcrD,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA1C,EAAuDM,MAAvD,CAA1C;AACD,GA3IY,CA6Ib;;;AACA,WAAS8C,cAAT,GAA2B;AACzBhD,IAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BrB,QAA5B;AACAE,IAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BpB,UAA5B;AACD,GAjJY,CAmJb;;;AACA,WAASkD,cAAT,GAA0B;AACxBjD,IAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BrB,QAA5B;AACAE,IAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BpB,UAA5B;AACD,GAvJY,CAyJb;;;AACA,WAASmD,iBAAT,CAA4B1D,KAA5B,EAAmC4B,KAAnC,EAA0C+B,IAA1C,EAAgDC,IAAhD,EAAsD;AACpD,YAAQ5D,KAAR;AACE,WAAK,UAAL;AACE,YAAI4B,KAAK,GAAG,CAAZ,EAAe;AACb+B,UAAAA,IAAI;AACL,SAFD,MAEO,IAAI/B,KAAK,KAAK,CAAd,EAAiB;AACtB;AACD,SAFM,MAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpBgC,UAAAA,IAAI;AACL;;AACD;;AACF,WAAK,cAAL;AACE,YAAIhC,KAAK,GAAG,CAAZ,EAAe;AACb+B,UAAAA,IAAI;AACL,SAFD,MAEO,IAAI/B,KAAK,KAAK,CAAd,EAAiB;AACtB;AACD,SAFM,MAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpBgC,UAAAA,IAAI;AACL;;AACD;;AACF,WAAK,UAAL;AACE,YAAIhC,KAAK,GAAG,CAAZ,EAAe;AACb+B,UAAAA,IAAI;AACL,SAFD,MAEO,IAAI/B,KAAK,KAAK,CAAd,EAAiB;AACtB;AACD,SAFM,MAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpBgC,UAAAA,IAAI;AACL;;AACD;;AACF,WAAK,OAAL;AACE,YAAIhC,KAAK,GAAG,CAAZ,EAAe;AACb+B,UAAAA,IAAI;AACL,SAFD,MAEO,IAAI/B,KAAK,KAAK,CAAd,EAAiB;AACtB;AACD,SAFM,MAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpBgC,UAAAA,IAAI;AACL;;AACD;;AACF;AACE;AAtCJ;AAwCD,GAnMY,CAqMb;;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACA,QAAIA,CAAC,CAAClC,KAAF,KAAY,UAAhB,EAA2B;AACzB;AACAoB,MAAAA,eAAe;AACfxC,MAAAA,QAAQ,GAAG,CAAC,GAAGN,QAAJ,CAAX;AACA,YAAM6D,SAAS,GAAGvD,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BpB,UAA9C;AACA,YAAMyD,OAAO,GAAG;AAAC5D,QAAAA,WAAW,EAAE,EAAd;AAAkBC,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,QAAQ,EAAE,CAA3C;AAA8CC,QAAAA,UAAU,EAAEwD;AAA1D,OAAhB;AACAvD,MAAAA,QAAQ,CAAC0C,IAAT,CAAcc,OAAd;AACA7D,MAAAA,WAAW,CAACK,QAAD,CAAX;AACAI,MAAAA,YAAY,CAAC6B,OAAb,CAAqB,UAArB,EAAiC1B,IAAI,CAACkD,SAAL,CAAezD,QAAf,CAAjC,EARyB,CAWzB;AACD,KAZD,MAYO,IAAI,CAAC0D,KAAK,CAACJ,CAAC,CAAClC,KAAH,CAAV,EAAqB;AAC1BpB,MAAAA,QAAQ,GAAG,CAAC,GAAGN,QAAJ,CAAX;AACA0C,MAAAA,YAAY;;AACZ,UAAIpC,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsCsB,MAAtC,GAA+C,CAAnD,EAAsD;AACpDnB,QAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsC6C,IAAtC,CAA2CI,QAAQ,CAACQ,CAAC,CAAClC,KAAH,EAAU,EAAV,CAAnD;AACApB,QAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwC8C,IAAxC,CAA6CY,CAAC,CAACK,SAA/C;AACAT,QAAAA,iBAAiB,CAAC1D,KAAD,EAAQ8D,CAAC,CAAClC,KAAV,EAAiB6B,cAAjB,EAAiCD,cAAjC,CAAjB;AACArD,QAAAA,WAAW,CAACK,QAAD,CAAX;AACAI,QAAAA,YAAY,CAAC6B,OAAb,CAAqB,UAArB,EAAiC1B,IAAI,CAACkD,SAAL,CAAezD,QAAf,CAAjC;AACD,OAND,MAMO;AACL;AACD,OAXyB,CAa1B;;AACD,KAdM,MAcA,IAAIsD,CAAC,CAAClC,KAAF,KAAY,OAAhB,EAAyB;AAC9BpB,MAAAA,QAAQ,GAAG,CAAC,GAAGN,QAAJ,CAAX;AACA,YAAMkE,YAAY,GAAG5D,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsCgE,GAAtC,EAArB;AACA7D,MAAAA,QAAQ,CAACA,QAAQ,CAACmB,MAAT,GAAgB,CAAjB,CAAR,CAA4BvB,WAA5B,CAAwCiE,GAAxC;AACAX,MAAAA,iBAAiB,CAAC1D,KAAD,EAAQoE,YAAR,EAAsBZ,cAAtB,EAAsCC,cAAtC,CAAjB;AACAtD,MAAAA,WAAW,CAACK,QAAD,CAAX;AACAI,MAAAA,YAAY,CAAC6B,OAAb,CAAqB,UAArB,EAAiC1B,IAAI,CAACkD,SAAL,CAAezD,QAAf,CAAjC;AACD;AACF,GApCD,CAtMa,CA4Ob;AACA;AAEA;;;AACA,QAAMsB,QAAQ,GAAK9B,KAAD,IAAW;AAC3B,UAAM8B,QAAQ,GAAG,CAAC,GAAGnC,KAAJ,CAAjB;;AACA,QAAIK,KAAK,KAAK,UAAd,EAA0B;AACtB8B,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYjC,OAAZ,GAAsB,CAAtB;AAEH,KAHD,MAGO,IAAIG,KAAK,KAAK,cAAd,EAA8B;AACjC8B,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYjC,OAAZ,GAAsB,CAAtB;AAGH,KAJM,MAIA,IAAIG,KAAK,KAAK,UAAd,EAA0B;AAC7B8B,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYjC,OAAZ,GAAsB,CAAtB;AAEH,KAHM,MAGA,IAAIG,KAAK,KAAK,OAAd,EAAuB;AAC1B8B,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYjC,OAAZ,GAAsB,CAAtB;AAEH;;AACDiC,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYhC,MAAZ,GAAqBgC,QAAQ,CAAC,CAAD,CAAR,CAAYjC,OAAZ,GAAsB,CAA3C;AACAiC,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAY/B,MAAZ,GAAqB+B,QAAQ,CAAC,CAAD,CAAR,CAAYjC,OAAZ,GAAsB,CAA3C;AACAD,IAAAA,QAAQ,CAACkC,QAAD,CAAR;AACD,GAnBD,CAhPa,CAqQb;;;AACA,QAAMwC,WAAW,GAAIR,CAAD,IAAO;AACzB,QAAI1C,QAAQ,GAAG,EAAf;AACA0C,IAAAA,CAAC,CAACS,cAAF;;AACA,QAAIrE,QAAQ,CAACA,QAAQ,CAACyB,MAAT,GAAgB,CAAjB,CAAR,CAA4BtB,SAA5B,CAAsCsB,MAAtC,KAAiD,CAArD,EAAwD;AACtD,UAAIJ,OAAO,GAAGC,QAAQ,CAACC,iBAAT,CAA2B,OAA3B,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACH,OAAO,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIH,OAAO,CAACG,CAAD,CAAP,CAAWG,OAAf,EAAwB;AACtBT,UAAAA,QAAQ,GAAGG,OAAO,CAACG,CAAD,CAAP,CAAWE,KAAtB;AACA3B,UAAAA,QAAQ,CAACmB,QAAD,CAAR;AACAR,UAAAA,YAAY,CAAC6B,OAAb,CAAqB,OAArB,EAA8BrB,QAA9B;AACA;AACD,SALD,MAKO;AACL;AACD;AACF;AACF,KAZD,MAYO;AACL;AACD;AACF,GAlBD,CAtQa,CA0Rb;;;AACA,QAAMoD,OAAO,GAAG,MAAM;AACpB,QAAItE,QAAQ,CAACyB,MAAT,GAAkB,CAAtB,EAAyB;AACvBnB,MAAAA,QAAQ,GAAG,CAAC,GAAGN,QAAJ,CAAX;AACAM,MAAAA,QAAQ,CAAC6D,GAAT;AACAlE,MAAAA,WAAW,CAACK,QAAD,CAAX;AACD,KAJD,MAIO;AACL;AACD;AACF,GARD,CA3Ra,CAqSb;;;AACA,QAAMiE,UAAU,GAAG,MAAM;AACvBtE,IAAAA,WAAW,CACT,CACE;AACEC,MAAAA,WAAW,EAAE,EADf;AAEEC,MAAAA,SAAS,EAAE,EAFb;AAGEC,MAAAA,QAAQ,EAAE,CAHZ;AAIEC,MAAAA,UAAU,EAAE;AAJd,KADF,CADS,CAAX;AASAf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACA8B,IAAAA,QAAQ,CAACQ,cAAT,CAAwB,YAAxB,EAAsCJ,KAAtC,GAA8C,EAA9C;AACAhB,IAAAA,YAAY,CAAC8D,KAAb;AACD,GAdD;;AAgBA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,SAAS,GAAGpD,QAAQ,CAACQ,cAAT,CAAwB,YAAxB,EAAsCJ,KAAxD;AACAhB,IAAAA,YAAY,CAAC6B,OAAb,CAAqB,MAArB,EAA6BmC,SAA7B;AACAlF,IAAAA,OAAO,CAAC4B,MAAM,CAACsD,SAAD,CAAP,CAAP;AAED,GALD;;AAUA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAI1E,QAAnB;AAA6B,IAAA,IAAI,EAAIT,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAIS,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAI2D,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAG,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAIc,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAI3E,KAArB;AAA4B,IAAA,KAAK,EAAIL,KAArC;AAA4C,IAAA,IAAI,EAAIF,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAI6E,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAG,mBAApB;AAAwC,IAAA,EAAE,EAAG,MAA7C;AAAoD,IAAA,OAAO,EAAIE,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,IAAA,SAAS,EAAG,wBAApB;AAA6C,IAAA,EAAE,EAAG,OAAlD;AAA0D,IAAA,OAAO,EAAIC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CANF,CALF,CAJF,CADF;AAwBD;;AAED,eAAenF,GAAf;AAGA","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport ValueButtons from './components/ValueButtons';\nimport ScoreDisplay from './components/ScoreDisplay';\nimport SelectLevel from './components/SelectLevel';\nimport LevelRules from './components/LevelRules';\nimport SetGoal from './components/SetGoal';\nimport Popup from './components/Popup';\nimport { Z_FIXED } from 'zlib';\n\n\n\nfunction App() {\n  //Initial states and globals. Later will incorporate a button in UI for changing level\n  const [completed, setCompleted] = useState(false)\n  const [goal, setGoal] = useState(0)\n  const[rules, setRules] = useState(\n    [\n      {\n        neutral: 0,\n        addOne: 0,\n        subOne: 0\n      }\n    ]\n  )\n  const [level, setLevel] = useState('')\n  const [appState, setAppState] = useState(\n    [\n      {\n        displayText: [],\n        endValues: [],\n        endScore: 0,\n        totalScore: 0\n      }\n    ]);\n    let newState = []\n    const xArray = []\n    const mArray = []\n  \n  //Functions related to scoring\n  //--------------------------------------------------------------------------------------\n  \n\nuseEffect(() => {\n  const storedGoal = localStorage.getItem('goal')\n  const storedState = JSON.parse(localStorage.getItem('appState'))\n  const storedLevel = localStorage.getItem('level');\n  const storedCompleted = JSON.parse(localStorage.getItem('completed'))\n\n  const newCompleted = storedCompleted ? storedCompleted : completed;\n  setCompleted(newCompleted)\n  \n  const newLevel = storedLevel ? storedLevel : 'Advanced';\n  setLevel(newLevel);\n\n  const newState = storedState ? storedState : appState;\n  setAppState(newState)\n\n  const newGoal = storedGoal ? storedGoal : 0\n  setGoal(Number(newGoal))\n}, [])\n\n\nuseEffect(() => {\n  let options = document.getElementsByName('level') \n  for (var i=0; i<options.length; i++) {\n    if(options[i].value === level) {\n        options[i].checked = \"checked\"\n    } else {\n      continue\n    }\n  newRules(level)\n  \n  }\n}, [level]);\n\nuseEffect(() => {\n  const clearButton = document.getElementById('CLEAR')\n  const nextButton = document.getElementById('NEXT')\n  const changeButton = document.getElementById('changeLevel')\n  const lastButton = document.getElementById('last')\n  const resetButton = document.getElementById('reset')\n  if (appState[appState.length-1].endValues.length === 0) {\n    clearButton.disabled = true;\n  } else {\n    clearButton.disabled = false;\n  }\n  if (appState[appState.length-1].endValues.length === 6) {\n    nextButton.disabled = false\n  } else {\n    nextButton.disabled = true;\n  }\n  if (appState[appState.length-1].endValues.length === 0) {\n    changeButton.disabled = false;\n  } else {\n    changeButton.disabled = true;\n  }\n  if (appState.length > 1) {\n    lastButton.disabled = false;\n  } else {\n    lastButton.disabled = true;\n  }\n  if (appState.length === 1 && appState[0].endValues.length === 0 && localStorage.length === 0) {\n    resetButton.disabled = true;\n  } else {\n    resetButton.disabled = false;\n  }\n  if (appState[appState.length-1].totalScore === goal && goal !== 0 && completed === false) {\n    const popup = document.getElementById('popup')\n    popup.style.display = 'fixed';\n    setCompleted(true)\n    localStorage.setItem('completed', true)\n  } else {\n    return\n  }\n}, [appState, goal, completed])\n\nuseEffect (() => {\n  const goalButton = document.getElementsByClassName('goal-button')\n  if (goal !== 0) {\n    goalButton[0].disabled = true;\n  } else {\n    goalButton[0].disabled = false;\n  }\n}, [goal])\n\n\n\n\n  //Keeps the score list scrolled to the current end\n  function updateScroll () {\n    const element = document.getElementById('score-display');\n    element.scrollTop = (element.scrollHeight);\n  }\n\n  function sortDisplayText() {\n    for (var i = 0; i< appState[appState.length-1].displayText.length; i++) {\n      if (appState[appState.length-1].displayText[i] === 'X') {\n        appState[appState.length-1].displayText.splice(i,1)\n        xArray.push('X')\n        i--\n      } else if (appState[appState.length-1].displayText[i] === 'M') {\n        appState[appState.length-1].displayText.splice(i,1)\n        i--\n        mArray.push('M')\n      } else {\n        continue\n      }\n    }\n    appState[appState.length-1].displayText.sort((a,b) => parseInt(b)-parseInt(a))\n    appState[appState.length-1].displayText = xArray.concat(appState[appState.length-1].displayText, mArray)\n  }\n\n  //Decrements both total score and end score\n  function decrementScore () {\n    newState[newState.length-1].endScore--\n    newState[newState.length-1].totalScore--\n  }\n\n  //Increments total score and end score\n  function incrementScore() {\n    newState[newState.length-1].endScore++\n    newState[newState.length-1].totalScore++\n  } \n\n  //Function to change increment and decrement end score and total score based on either a value input or a value deleted. \n  function handleScoreChange (level, value, opt1, opt2) {\n    switch (level) {\n      case 'Beginner':\n        if (value > 6) {\n          opt1()\n        } else if (value === 6) {\n          break\n        } else if (value < 6) {\n          opt2()\n        }\n        break;\n      case 'Intermediate':\n        if (value > 7) {\n          opt1()\n        } else if (value === 7) {\n          break\n        } else if (value < 7) {\n          opt2()\n        }\n        break;\n      case 'Advanced':\n        if (value > 8) {\n          opt1()\n        } else if (value === 8) {\n          break\n        } else if (value < 8) {\n          opt2()\n        }\n        break;\n      case 'Elite':\n        if (value > 9) {\n          opt1()\n        } else if (value === 9) {\n          break\n        } else if (value < 9) {\n          opt2()\n        }\n        break;\n      default:\n        return\n    }\n  }\n\n  //Function for handling all inputs from ValueButton buttons\n  const handleButton = (e) => {\n    //Code that runs when next end button is pressed\n    if (e.value === \"NEXT END\"){\n      //sort previous end to be displayed in descending order\n      sortDisplayText()\n      newState = [...appState]\n      const lastTotal = newState[newState.length-1].totalScore\n      const nextEnd = {displayText: [], endValues: [], endScore: 0, totalScore: lastTotal}\n      newState.push(nextEnd)\n      setAppState(newState)\n      localStorage.setItem('appState', JSON.stringify(newState))\n      \n\n      //Code that runs when an arrow value is pressed\n    } else if (!isNaN(e.value)) {\n      newState = [...appState]\n      updateScroll()\n      if (newState[newState.length-1].endValues.length < 6) {\n        newState[newState.length-1].endValues.push(parseInt(e.value, 10))\n        newState[newState.length-1].displayText.push(e.innerHTML)\n        handleScoreChange(level, e.value, incrementScore, decrementScore)\n        setAppState(newState)\n        localStorage.setItem('appState', JSON.stringify(newState))\n      } else {\n        return\n      }\n\n      //Code that runs when clear is pressed\n    } else if (e.value === 'CLEAR') {\n      newState = [...appState]\n      const deletedValue = newState[newState.length-1].endValues.pop()\n      newState[newState.length-1].displayText.pop()\n      handleScoreChange(level, deletedValue, decrementScore, incrementScore)\n      setAppState(newState)\n      localStorage.setItem('appState', JSON.stringify(newState))\n    }\n  }\n\n  //Functions for the control panel\n  //----------------------------------------------------------------------------------------\n\n  //Updates the control panel rules section\n  const newRules =  (level) => {\n    const newRules = [...rules]\n    if (level === 'Beginner') {\n        newRules[0].neutral = 6\n\n    } else if (level === 'Intermediate') {\n        newRules[0].neutral = 7\n      \n\n    } else if (level === 'Advanced') {\n        newRules[0].neutral = 8\n\n    } else if (level === 'Elite') {\n        newRules[0].neutral = 9\n\n    }\n    newRules[0].addOne = newRules[0].neutral + 1\n    newRules[0].subOne = newRules[0].neutral - 1\n    setRules(newRules)\n  }\n\n  //Updates the level when a new one is selected\n  const handleLevel = (e) => {\n    let newLevel = ''\n    e.preventDefault()\n    if (appState[appState.length-1].endValues.length === 0) {\n      let options = document.getElementsByName('level')\n      for (var i = 0; i<options.length; i++) {\n        if (options[i].checked) {\n          newLevel = options[i].value\n          setLevel(newLevel)\n          localStorage.setItem('level', newLevel)\n          break\n        } else {\n          continue\n        }\n      }\n    } else {\n      return\n    }\n  }\n\n  //Deletes current end and allows modifications to previous end\n  const lastEnd = () => {\n    if (appState.length > 1) {\n      newState = [...appState]\n      newState.pop()\n      setAppState(newState)\n    } else {\n      return\n    }\n  }\n\n  //Resets appState\n  const resetState = () => {\n    setAppState(\n      [\n        {\n          displayText: [],\n          endValues: [],\n          endScore: 0,\n          totalScore: 0\n        }\n      ]);\n    setCompleted(false);\n    setGoal(0);\n    document.getElementById('goal-input').value = '';\n    localStorage.clear();\n  }\n  \n  const handleGoal = () => {\n    const goalInput = document.getElementById('goal-input').value\n    localStorage.setItem('goal', goalInput)\n    setGoal(Number(goalInput))\n\n  }\n\n\n\n  \n  return (\n    <>\n      <div className = \"popup\">\n        <Popup appState = {appState} goal = {goal} />\n      </div>\n      <div className=\"App\">\n        <div className = \"scorecard\">\n          <ScoreDisplay appState = {appState} />\n          <ValueButtons handleButton = {handleButton} />\n        </div>\n        <div className = \"control-panel\">\n          <h3 className = \"control-title\">Control Panel</h3>\n          <SetGoal handleGoal = {handleGoal} />\n          <LevelRules level = {level} rules = {rules} goal = {goal} />\n          <SelectLevel handleLevel = {handleLevel} />\n\n          <div className = \"control-buttons\">\n            <button className = \"level-submit blue\" id = 'last' onClick = {lastEnd} >Last End</button>\n            <button className = \"level-submit blue mb-5\" id = 'reset' onClick = {resetState} >Reset</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n\n/*\nThings to add:\n\n-grey out buttons when they are not a valid action\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}